{"ast":null,"code":"var _jsxFileName = \"/Users/yeonsu/FE-Study/React Basic/examples/src/State/NotificationList.js\";\nimport React from \"react\";\nimport Notification from \"./Notification\";\n\n// Notification 컴포넌트를 목록 형태로 보여주는 컴포넌트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reserveNotifications = [{\n  id: 1,\n  message: \"안녕하세요\"\n}, {\n  id: 2,\n  message: \"반가워요\"\n}, {\n  id: 3,\n  message: \"다시 만나요\"\n}];\nvar timer;\nclass NotificationList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // 생성자에서 앞으로 사용할 데이터를 state에 넣어서 초기화\n    this.state = {\n      notifications: []\n    };\n  }\n  componentDidMount() {\n    const {\n      notifications\n    } = this.state;\n    timer = setInterval(() => {\n      // 데이터 배열 reserveNotifications로부터 알림 데이터를 하나씩 가져와서 \n      //state에 있는 notification 배열에 넣고 업데이트\n      if (notifications.length < reserveNotifications.length) {\n        const index = notifications.length;\n        notifications.push(reserveNotifications[index]);\n        // 클래스 컴포넌트에서 state 업데이트 시 setState() 함수 사용\n        this.setState({\n          notifications: notifications\n        });\n      } else {\n        clearInterval(timer);\n      }\n    }, 2000);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.notifications.map(notification => {\n        return /*#__PURE__*/_jsxDEV(Notification, {\n          id: notification.id,\n          message: notification.message\n        }, notification.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default NotificationList;","map":{"version":3,"names":["React","Notification","reserveNotifications","id","message","timer","NotificationList","Component","constructor","props","state","notifications","componentDidMount","setInterval","length","index","push","setState","clearInterval","render","map","notification"],"sources":["/Users/yeonsu/FE-Study/React Basic/examples/src/State/NotificationList.js"],"sourcesContent":["import React from \"react\";\nimport Notification from \"./Notification\";\n\n// Notification 컴포넌트를 목록 형태로 보여주는 컴포넌트\n\nconst reserveNotifications = [\n    {\n        id: 1,\n        message: \"안녕하세요\"\n    },\n    {\n        id: 2,\n        message: \"반가워요\"\n    },\n    {\n        id: 3,\n        message: \"다시 만나요\"\n    },\n];\n\nvar timer;\n\nclass NotificationList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // 생성자에서 앞으로 사용할 데이터를 state에 넣어서 초기화\n        this.state = {\n            notifications: [],\n        };\n    }\n\n    componentDidMount() {\n        const { notifications } = this.state;\n\n        timer = setInterval(() => {\n            // 데이터 배열 reserveNotifications로부터 알림 데이터를 하나씩 가져와서 \n            //state에 있는 notification 배열에 넣고 업데이트\n            if(notifications.length < reserveNotifications.length) {\n                const index = notifications.length;\n                notifications.push(reserveNotifications[index]);\n                // 클래스 컴포넌트에서 state 업데이트 시 setState() 함수 사용\n                this.setState({\n                    notifications: notifications,\n                });\n            } else {\n            \n                clearInterval(timer);\n            }\n        }, 2000);\n    }\n\n    render()  {\n        return (\n            <div>\n                {this.state.notifications.map((notification) => {\n                    return <Notification \n                    key={notification.id}\n                    id={notification.id}\n                    message={notification.message} />;\n                })}\n            </div>\n        );\n    }\n}\n\nexport default NotificationList;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,gBAAgB;;AAEzC;AAAA;AAEA,MAAMC,oBAAoB,GAAG,CACzB;EACIC,EAAE,EAAE,CAAC;EACLC,OAAO,EAAE;AACb,CAAC,EACD;EACID,EAAE,EAAE,CAAC;EACLC,OAAO,EAAE;AACb,CAAC,EACD;EACID,EAAE,EAAE,CAAC;EACLC,OAAO,EAAE;AACb,CAAC,CACJ;AAED,IAAIC,KAAK;AAET,MAAMC,gBAAgB,SAASN,KAAK,CAACO,SAAS,CAAC;EAC3CC,WAAW,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;;IAEZ;IACA,IAAI,CAACC,KAAK,GAAG;MACTC,aAAa,EAAE;IACnB,CAAC;EACL;EAEAC,iBAAiB,GAAG;IAChB,MAAM;MAAED;IAAc,CAAC,GAAG,IAAI,CAACD,KAAK;IAEpCL,KAAK,GAAGQ,WAAW,CAAC,MAAM;MACtB;MACA;MACA,IAAGF,aAAa,CAACG,MAAM,GAAGZ,oBAAoB,CAACY,MAAM,EAAE;QACnD,MAAMC,KAAK,GAAGJ,aAAa,CAACG,MAAM;QAClCH,aAAa,CAACK,IAAI,CAACd,oBAAoB,CAACa,KAAK,CAAC,CAAC;QAC/C;QACA,IAAI,CAACE,QAAQ,CAAC;UACVN,aAAa,EAAEA;QACnB,CAAC,CAAC;MACN,CAAC,MAAM;QAEHO,aAAa,CAACb,KAAK,CAAC;MACxB;IACJ,CAAC,EAAE,IAAI,CAAC;EACZ;EAEAc,MAAM,GAAI;IACN,oBACI;MAAA,UACK,IAAI,CAACT,KAAK,CAACC,aAAa,CAACS,GAAG,CAAEC,YAAY,IAAK;QAC5C,oBAAO,QAAC,YAAY;UAEpB,EAAE,EAAEA,YAAY,CAAClB,EAAG;UACpB,OAAO,EAAEkB,YAAY,CAACjB;QAAQ,GAFzBiB,YAAY,CAAClB,EAAE;UAAA;UAAA;UAAA;QAAA,QAEa;MACrC,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACA;EAEd;AACJ;AAEA,eAAeG,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}